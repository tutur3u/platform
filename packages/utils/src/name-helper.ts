const articles = new Set(['van', 'von', 'der', 'den', 'de', 'la', 'les', 'le']);

export const getInitials = (name?: string | null): string => {
  if (!name) return '';

  // Replace tabs and newlines with spaces and trim
  const cleanName = name.replace(/[\t\n]/g, ' ').trim();
  if (!cleanName) return '';

  // Split by spaces, hyphens, and apostrophes
  let nameParts = cleanName.split(/[\s\-']+/).filter(Boolean);
  if (nameParts.length === 0) return '';

  // For single word names
  if (nameParts.length === 1) {
    return nameParts[0]!.charAt(0).toUpperCase();
  }

  const firstPart = nameParts[0]!.toLowerCase();

  // Special case: if the name starts with a capitalized prefix like "Van", use it
  if (nameParts[0]![0]?.toUpperCase() === nameParts[0]![0]) {
    return (
      nameParts[0]![0]! + nameParts[nameParts.length - 1]![0]
    ).toUpperCase();
  }

  // Otherwise look for the first non-prefix word and last word
  if (articles.has(firstPart)) {
    const lastPart = nameParts[nameParts.length - 1]!;
    return (nameParts[1] ? nameParts[1][0] : '') + lastPart[0]!.toUpperCase();
  }

  // Otherwise use first and last word
  return (
    (nameParts?.[0]?.[0] ?? '') + (nameParts?.[nameParts.length - 1]?.[0] ?? '')
  ).toUpperCase();
};

/**
 * Generates a consistent fun name from a user ID
 */
export function generateFunName({
  id,
  locale = 'en',
}: {
  id: string;
  locale?: 'en' | 'vi' | string;
}): string {
  // List of adjectives and animals for fun names
  const adjectives = {
    en: [
      'Happy',
      'Silly',
      'Clever',
      'Brave',
      'Curious',
      'Playful',
      'Friendly',
      'Gentle',
      'Jolly',
      'Witty',
      'Mighty',
      'Dazzling',
      'Adventurous',
      'Bouncy',
      'Cheerful',
      'Daring',
      'Energetic',
      'Fuzzy',
      'Goofy',
      'Hilarious',
      'Intelligent',
      'Jumpy',
      'Kind',
      'Lively',
      'Magical',
      'Noble',
      'Optimistic',
      'Quirky',
      'Radiant',
      'Sassy',
      'Talented',
      'Unique',
      'Vibrant',
      'Whimsical',
      'Zealous',
      'Adorable',
    ],
    vi: [
      'Vui V·∫ª', // Happy
      'Ng·ªëc Ngh·∫øch', // Silly
      'Th√¥ng Minh', // Clever
      'D≈©ng C·∫£m', // Brave
      'T√≤ M√≤', // Curious
      'Tinh Ngh·ªãch', // Playful
      'Th√¢n Thi·ªán', // Friendly
      'D·ªãu D√†ng', // Gentle
      'H·∫°nh Ph√∫c', // Jolly
      'H√≥m H·ªânh', // Witty
      'M·∫°nh M·∫Ω', // Mighty
      'L·∫•p L√°nh', // Dazzling
      'Phi√™u L∆∞u', // Adventurous
      'Nh·∫£y Nh√≥t', // Bouncy
      'Vui T∆∞∆°i', // Cheerful
      'T√°o B·∫°o', // Daring
      'NƒÉng ƒê·ªông', // Energetic
      'X√π X√¨', // Fuzzy
      'Ng·ªõ Ng·∫©n', // Goofy
      'Bu·ªìn C∆∞·ªùi', // Hilarious
      'Th√¥ng Tu·ªá', // Intelligent
      'Nh·∫£y Nh√≥t', // Jumpy
      'T·ªët B·ª•ng', // Kind
      'S·ªëng ƒê·ªông', // Lively
      'K·ª≥ Di·ªáu', // Magical
      'Cao Qu√Ω', // Noble
      'L·∫°c Quan', // Optimistic
      'K·ª≥ L·∫°', // Quirky
      'R·ª±c R·ª°', // Radiant
      'B∆∞·ªõng B·ªânh', // Sassy
      'T√†i NƒÉng', // Talented
      'ƒê·ªôc ƒê√°o', // Unique
      'S√¥i ƒê·ªông', // Vibrant
      'K·ª≥ Qu·∫∑c', // Whimsical
      'Nhi·ªát T√¨nh', // Zealous
      'ƒê√°ng Y√™u', // Adorable
    ],
  };

  const animals = {
    en: [
      { name: 'Octopus', emoji: 'üêô' },
      { name: 'Cat', emoji: 'üê±' },
      { name: 'Penguin', emoji: 'üêß' },
      { name: 'Fox', emoji: 'ü¶ä' },
      { name: 'Panda', emoji: 'üêº' },
      { name: 'Dolphin', emoji: 'üê¨' },
      { name: 'Koala', emoji: 'üê®' },
      { name: 'Owl', emoji: 'ü¶â' },
      { name: 'Tiger', emoji: 'üêØ' },
      { name: 'Rabbit', emoji: 'üê∞' },
      { name: 'Monkey', emoji: 'üêµ' },
      { name: 'Wolf', emoji: 'üê∫' },
      { name: 'Alligator', emoji: 'üêä' },
      { name: 'Beaver', emoji: 'ü¶´' },
      { name: 'Chameleon', emoji: 'ü¶é' },
      { name: 'Duck', emoji: 'ü¶Ü' },
      { name: 'Elephant', emoji: 'üêò' },
      { name: 'Flamingo', emoji: 'ü¶©' },
      { name: 'Giraffe', emoji: 'ü¶í' },
      { name: 'Hedgehog', emoji: 'ü¶î' },
      { name: 'Iguana', emoji: 'ü¶é' },
      { name: 'Jellyfish', emoji: 'ü™º' },
      { name: 'Kangaroo', emoji: 'ü¶ò' },
      { name: 'Lion', emoji: 'ü¶Å' },
      { name: 'Meerkat', emoji: 'ü¶ù' },
      { name: 'Narwhal', emoji: 'ü¶≠' },
      { name: 'Otter', emoji: 'ü¶¶' },
      { name: 'Peacock', emoji: 'ü¶ö' },
      { name: 'Quokka', emoji: 'ü¶ò' },
      { name: 'Raccoon', emoji: 'ü¶ù' },
      { name: 'Sloth', emoji: 'ü¶•' },
      { name: 'Turtle', emoji: 'üê¢' },
      { name: 'Unicorn', emoji: 'ü¶Ñ' },
      { name: 'Vulture', emoji: 'ü¶Ö' },
      { name: 'Walrus', emoji: 'ü¶≠' },
      { name: 'Yak', emoji: 'üêÉ' },
      { name: 'Zebra', emoji: 'ü¶ì' },
      { name: 'Badger', emoji: 'ü¶°' },
      { name: 'Cheetah', emoji: 'üêÜ' },
      { name: 'Dingo', emoji: 'üêï' },
      { name: 'Ferret', emoji: 'ü¶°' },
      { name: 'Gorilla', emoji: 'ü¶ç' },
    ],
    vi: [
      { name: 'B·∫°ch Tu·ªôc', emoji: 'üêô' },
      { name: 'M√®o', emoji: 'üê±' },
      { name: 'Chim C√°nh C·ª•t', emoji: 'üêß' },
      { name: 'C√°o', emoji: 'ü¶ä' },
      { name: 'G·∫•u Tr√∫c', emoji: 'üêº' },
      { name: 'C√° Heo', emoji: 'üê¨' },
      { name: 'G·∫•u Koala', emoji: 'üê®' },
      { name: 'C√∫ M√®o', emoji: 'ü¶â' },
      { name: 'H·ªï', emoji: 'üêØ' },
      { name: 'Th·ªè', emoji: 'üê∞' },
      { name: 'Kh·ªâ', emoji: 'üêµ' },
      { name: 'S√≥i', emoji: 'üê∫' },
      { name: 'C√° S·∫•u', emoji: 'üêä' },
      { name: 'H·∫£i Ly', emoji: 'ü¶´' },
      { name: 'T·∫Øc K√®', emoji: 'ü¶é' },
      { name: 'V·ªãt', emoji: 'ü¶Ü' },
      { name: 'Voi', emoji: 'üêò' },
      { name: 'H·ªìng H·∫°c', emoji: 'ü¶©' },
      { name: 'H∆∞∆°u Cao C·ªï', emoji: 'ü¶í' },
      { name: 'Nh√≠m', emoji: 'ü¶î' },
      { name: 'K·ª≥ ƒê√†', emoji: 'ü¶é' },
      { name: 'S·ª©a', emoji: 'ü™º' },
      { name: 'Kangaroo', emoji: 'ü¶ò' },
      { name: 'S∆∞ T·ª≠', emoji: 'ü¶Å' },
      { name: 'C·∫ßy Meerkat', emoji: 'ü¶ù' },
      { name: 'K·ª≥ L√¢n Bi·ªÉn', emoji: 'ü¶≠' },
      { name: 'R√°i C√°', emoji: 'ü¶¶' },
      { name: 'C√¥ng', emoji: 'ü¶ö' },
      { name: 'Quokka', emoji: 'ü¶ò' },
      { name: 'G·∫•u M√®o', emoji: 'ü¶ù' },
      { name: 'L∆∞·ªùi', emoji: 'ü¶•' },
      { name: 'R√πa', emoji: 'üê¢' },
      { name: 'K·ª≥ L√¢n', emoji: 'ü¶Ñ' },
      { name: 'K·ªÅn K·ªÅn', emoji: 'ü¶Ö' },
      { name: 'H·∫£i M√£', emoji: 'ü¶≠' },
      { name: 'B√≤ Yak', emoji: 'üêÉ' },
      { name: 'Ng·ª±a V·∫±n', emoji: 'ü¶ì' },
      { name: 'L·ª≠ng', emoji: 'ü¶°' },
      { name: 'B√°o', emoji: 'üêÜ' },
      { name: 'Ch√≥ Dingo', emoji: 'üêï' },
      { name: 'Ch·ªìn', emoji: 'ü¶°' },
      { name: 'Kh·ªâ ƒê·ªôt', emoji: 'ü¶ç' },
    ],
  };

  // Improved hash function for more randomness
  const hash = (str: string): number => {
    let h1 = 0xdeadbeef;
    let h2 = 0x41c6ce57;

    for (let i = 0; i < str.length; i++) {
      const char = str.charCodeAt(i);
      h1 = Math.imul(h1 ^ char, 2654435761);
      h2 = Math.imul(h2 ^ char, 1597334677);
    }

    h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507);
    h1 = Math.imul(h1 ^ (h1 >>> 13), 3266489909);

    h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507);
    h2 = Math.imul(h2 ^ (h2 >>> 13), 3266489909);

    return 4294967296 * (2097151 & h2) + (h1 >>> 0);
  };

  // Use the appropriate language lists
  const selectedLocale = locale in adjectives ? locale : 'en';
  const adjectivesList =
    adjectives?.[selectedLocale as keyof typeof adjectives];
  const animalsList = animals?.[selectedLocale as keyof typeof animals];

  // Generate consistent indices
  const combinedHash = hash(id);
  const adjIndex = combinedHash % adjectivesList.length;
  const animalIndex = (combinedHash * 31) % animalsList.length;

  const adjective =
    adjectivesList[adjIndex] || (locale === 'en' ? 'Happy' : 'Vui');
  const animal = animalsList[animalIndex];

  if (!animal) {
    return locale === 'en'
      ? `${adjective} Mystery ‚ùì`
      : `${adjective} K·ª≥ B√≠ ‚ùì`;
  }

  return locale === 'vi'
    ? `${animal.name} ${adjective} ${animal.emoji}`
    : `${adjective} ${animal.name} ${animal.emoji}`;
}
